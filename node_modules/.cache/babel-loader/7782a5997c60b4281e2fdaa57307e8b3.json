{"ast":null,"code":"import _objectWithoutProperties from \"/Users/mille/WebstormProjects/LivaVic/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mille/WebstormProjects/LivaVic/src/core/module-render/module-render.tsx\";\nimport React from \"react\";\nimport { Hero } from \"../../modules/hero/hero\";\nimport { FiftyFifty } from \"../../modules/50-50/fifty-fifty\";\nimport { ImageOverview } from \"../../modules/image-overview/image-overview\";\n/**\n *\n * This component handles all dynamic rendering of site modules\n *\n */\n\n/**\n * Here we register all the implemented block modules\n */\n\nconst MODULES = {\n  HeroModule: Hero,\n  FiftyFiftyModule: FiftyFifty,\n  ImageOverviewModule: ImageOverview\n};\n/**\n * Typings to handle BE contract\n */\n\n/**\n * Dynamic rendering function\n *\n * @param modulesByKind\n */\nconst createModuleLoop = modulesByKind => {\n  return ({\n    modules\n  }) => {\n    if (!modules) {\n      return React.createElement(React.Fragment, null);\n    }\n\n    return React.createElement(React.Fragment, null, modules.map((_ref) => {\n      let kind = _ref.kind,\n          id = _ref.id,\n          module = _objectWithoutProperties(_ref, [\"kind\", \"id\"]);\n\n      const Comp = modulesByKind[kind];\n\n      if (!Comp) {\n        // Alert error\n        console.warn(`Mismatch of module kind: ${kind}`);\n        return null;\n      }\n      /**\n       * All is good, and we return the desired component\n       */\n\n\n      return React.createElement(Comp, Object.assign({}, module, {\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }));\n  };\n};\n/**\n *  Internal usage types & React component\n */\n\n\nexport const ModuleRender = createModuleLoop(MODULES);","map":{"version":3,"sources":["/Users/mille/WebstormProjects/LivaVic/src/core/module-render/module-render.tsx"],"names":["React","Hero","FiftyFifty","ImageOverview","MODULES","HeroModule","FiftyFiftyModule","ImageOverviewModule","createModuleLoop","modulesByKind","modules","map","kind","id","module","Comp","console","warn","ModuleRender"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,aAAT,QAA8B,6CAA9B;AAEA;;;;;;AAMA;;;;AAQA,MAAMC,OAAmB,GAAG;AACxBC,EAAAA,UAAU,EAAEJ,IADY;AAExBK,EAAAA,gBAAgB,EAAEJ,UAFM;AAGxBK,EAAAA,mBAAmB,EAAEJ;AAHG,CAA5B;AAMA;;;;AASA;;;;;AAMA,MAAMK,gBAAgB,GAAIC,aAAD,IAAkD;AACvE,SAAO,CAAC;AAACC,IAAAA;AAAD,GAAD,KAA4C;AAC/C,QAAI,CAACA,OAAL,EAAc;AACV,aAAO,yCAAP;AACH;;AACD,WACI,0CAEIA,OAAO,CAACC,GAAR,CAAY,UAA2B;AAAA,UAAzBC,IAAyB,QAAzBA,IAAyB;AAAA,UAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,UAAZC,MAAY;;AACnC,YAAMC,IAAsB,GAAGN,aAAa,CAACG,IAAD,CAA5C;;AAEA,UAAI,CAACG,IAAL,EAAW;AACP;AAEAC,QAAAA,OAAO,CAACC,IAAR,CAAc,4BAA2BL,IAAK,EAA9C;AACA,eAAO,IAAP;AACH;AAED;;;;;AAIA,aAAQ,oBAAC,IAAD,oBAAUE,MAAV;AAAkB,QAAA,EAAE,EAAED,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAR;AACH,KAfD,CAFJ,CADJ;AAsBH,GA1BD;AA2BH,CA5BD;AA8BA;;;;;AAQA,OAAO,MAAMK,YAA+B,GAAGV,gBAAgB,CAACJ,OAAD,CAAxD","sourcesContent":["import React, { FC } from \"react\";\nimport { Hero } from \"../../modules/hero/hero\";\nimport { FiftyFifty } from \"../../modules/50-50/fifty-fifty\";\nimport { ImageOverview } from \"../../modules/image-overview/image-overview\";\n\n/**\n *\n * This component handles all dynamic rendering of site modules\n *\n */\n\n/**\n * Here we register all the implemented block modules\n */\n\ninterface IComponent {\n    [key: string]: FC;\n}\n\nconst MODULES: IComponent = {\n    HeroModule: Hero,\n    FiftyFiftyModule: FiftyFifty,\n    ImageOverviewModule: ImageOverview\n};\n\n/**\n * Typings to handle BE contract\n */\n\ninterface IContentModule {\n    kind: keyof typeof MODULES;\n    id: string;\n}\n\n/**\n * Dynamic rendering function\n *\n * @param modulesByKind\n */\n\nconst createModuleLoop = (modulesByKind: IComponent): FC<IModuleRender> => {\n    return ({modules} : IModuleRender): JSX.Element => {\n        if (!modules) {\n            return <></>;\n        }\n        return (\n            <>\n            {\n                modules.map(({kind, id, ...module}) => {\n                    const Comp: FC<{id: string}> = modulesByKind[kind];\n\n                    if (!Comp) {\n                        // Alert error\n\n                        console.warn(`Mismatch of module kind: ${kind}`);\n                        return null;\n                    }\n\n                    /**\n                     * All is good, and we return the desired component\n                     */\n\n                    return (<Comp {...module} id={id}/>)\n                })\n            }\n            </>\n        );\n    };\n}\n\n/**\n *  Internal usage types & React component\n */\n\nexport interface IModuleRender {\n    modules?: IContentModule[];\n}\n\nexport const ModuleRender: FC<IModuleRender> = createModuleLoop(MODULES);\n"]},"metadata":{},"sourceType":"module"}